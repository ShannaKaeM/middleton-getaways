{#
  Border Primitive Book - Self-Sufficient Design Tokens
  
  This primitive loads actual border values from the borders.json file.
  It is the single source of truth for borders in the design system.
  
  Usage:
  {% include 'primitive-books/border-book.twig' with {
    border_width: 'thin',
    border_style: 'solid',
    border_color: 'neutral-light',
    border_radius: 'md'
  } %}
#}

{# Load border tokens from JSON #}
{% set border_tokens = load_primitive('borders') %}

{# Load color tokens for border colors #}
{% set color_tokens = load_primitive('colors') %}

{# Apply border styles based on parameters #}
{% if border %}
  border: {{ border }};
{% endif %}

{% if border_width %}
  {% set width_value = border_tokens.widths[border_width] ?? border_width %}
  border-width: {{ width_value }};
{% endif %}

{% if border_style %}
  {% set style_value = border_tokens.styles[border_style] ?? border_style %}
  border-style: {{ style_value }};
{% endif %}

{% if border_color %}
  {# First check if it's a color token, then fall back to the raw value #}
  {% set color_value = color_tokens[border_color] ?? color_tokens[border_color|replace({'-': '.'})]['default'] ?? border_color %}
  border-color: {{ color_value }};
{% endif %}

{% if border_radius %}
  {% set radius_value = border_tokens.radii[border_radius] ?? border_radius %}
  border-radius: {{ radius_value }};
{% endif %}

{# Individual side properties #}
{% if border_top %}
  border-top: {{ border_top }};
{% endif %}

{% if border_top_width %}
  {% set top_width_value = border_tokens.widths[border_top_width] ?? border_top_width %}
  border-top-width: {{ top_width_value }};
{% endif %}

{% if border_top_style %}
  {% set top_style_value = border_tokens.styles[border_top_style] ?? border_top_style %}
  border-top-style: {{ top_style_value }};
{% endif %}

{% if border_top_color %}
  {% set top_color_value = color_tokens[border_top_color] ?? color_tokens[border_top_color|replace({'-': '.'})]['default'] ?? border_top_color %}
  border-top-color: {{ top_color_value }};
{% endif %}

{% if border_right %}
  border-right: {{ border_right }};
{% endif %}

{% if border_right_width %}
  {% set right_width_value = border_tokens.widths[border_right_width] ?? border_right_width %}
  border-right-width: {{ right_width_value }};
{% endif %}

{% if border_right_style %}
  {% set right_style_value = border_tokens.styles[border_right_style] ?? border_right_style %}
  border-right-style: {{ right_style_value }};
{% endif %}

{% if border_right_color %}
  {% set right_color_value = color_tokens[border_right_color] ?? color_tokens[border_right_color|replace({'-': '.'})]['default'] ?? border_right_color %}
  border-right-color: {{ right_color_value }};
{% endif %}

{% if border_bottom %}
  border-bottom: {{ border_bottom }};
{% endif %}

{% if border_bottom_width %}
  {% set bottom_width_value = border_tokens.widths[border_bottom_width] ?? border_bottom_width %}
  border-bottom-width: {{ bottom_width_value }};
{% endif %}

{% if border_bottom_style %}
  {% set bottom_style_value = border_tokens.styles[border_bottom_style] ?? border_bottom_style %}
  border-bottom-style: {{ bottom_style_value }};
{% endif %}

{% if border_bottom_color %}
  {% set bottom_color_value = color_tokens[border_bottom_color] ?? color_tokens[border_bottom_color|replace({'-': '.'})]['default'] ?? border_bottom_color %}
  border-bottom-color: {{ bottom_color_value }};
{% endif %}

{% if border_left %}
  border-left: {{ border_left }};
{% endif %}

{% if border_left_width %}
  {% set left_width_value = border_tokens.widths[border_left_width] ?? border_left_width %}
  border-left-width: {{ left_width_value }};
{% endif %}

{% if border_left_style %}
  {% set left_style_value = border_tokens.styles[border_left_style] ?? border_left_style %}
  border-left-style: {{ left_style_value }};
{% endif %}

{% if border_left_color %}
  {% set left_color_value = color_tokens[border_left_color] ?? color_tokens[border_left_color|replace({'-': '.'})]['default'] ?? border_left_color %}
  border-left-color: {{ left_color_value }};
{% endif %}

{# Individual corner radius #}
{% if border_top_left_radius %}
  {% set tl_radius_value = border_tokens.radii[border_top_left_radius] ?? border_top_left_radius %}
  border-top-left-radius: {{ tl_radius_value }};
{% endif %}

{% if border_top_right_radius %}
  {% set tr_radius_value = border_tokens.radii[border_top_right_radius] ?? border_top_right_radius %}
  border-top-right-radius: {{ tr_radius_value }};
{% endif %}

{% if border_bottom_right_radius %}
  {% set br_radius_value = border_tokens.radii[border_bottom_right_radius] ?? border_bottom_right_radius %}
  border-bottom-right-radius: {{ br_radius_value }};
{% endif %}

{% if border_bottom_left_radius %}
  {% set bl_radius_value = border_tokens.radii[border_bottom_left_radius] ?? border_bottom_left_radius %}
  border-bottom-left-radius: {{ bl_radius_value }};
{% endif %}
